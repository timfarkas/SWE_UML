@startuml
title Domain Class Analysis


abstract class User {

}

class Volunteer {
    +volunteerID : int
    +requestSignUpForOpportunity()
    +cancelVolunteering()
    +updateSkillLevel()
}

class SMB {
    +smbID : int
    +smbAddresses : list[str]
    +company details
}

class Organiser {
    +organiserID : int
    +createOpportunity()
    +editOpportunity()
    +deleteOpportunity()
}


class Opportunity {
    +opportunityID : int
    +title : str
    +status : str
    +opportunity details
    create()
    publish()
    start()
    close()
    finish()
    complete()
    cancel()
}

enum OpportunityStatus {
    Draft
    Published
    InProgress
    Closed
    FeedbackCollection
    Completed
    Cancelled
}

Opportunity "0..*" -- "1" OpportunityStatus

enum Skill {
    Web Development
    Cybersecurity
    Audio Systems
    IT Support
    ...
}

class OpportunityRegistry {
    +registryID : id
    +opportunityRating : int
    +organiserRating : int
    +opportunityFeedback : str
    +registerOpportunityFeedback()
    +registerSkillFeedback()
}

class SkillFeedback{
    +feedbackID : int
    +skillsAssessed : list[Skill]
    +skillRatings : list[int]
    +comments : str
    +date : datetime
    +updateRating()
    +updateComments()
}

OpportunityRegistry "1" -l- "0..1" SkillFeedback :   "associates with >"
SkillFeedback "1" -- "1" VolunteerSkills : feedbacks > 
 
enum OpportunityRegistryStatus {
    Drafted
    Pending
    Active
    Completed
    Withdrawn
    Removed
    FeedbackPending
    Closed
}

OpportunityRegistry "1" -- "1" OpportunityRegistryStatus

class SkillMatchingEngine {
    +calculateMatchScore()
    +findPersonalizedOpportunities()
    +findQualifiedVolunteers()
}

class TechSpecialization {
    +specializationID : int
    +area : str
    +description : str
}

class SMBAssociation {
    +associationID : int
    +startDate : datetime
}

class OpportunityWatchlist {
    +watchlistID : int
    +creationDate : datetime
    addEntry()
    removeEntry()
}

class OpportunityWatchlistEntry {
    +entryID : int
    +dateAdded : datetime
}


class VolunteerSkills {
    +volunteerSkillsID : int
    +skillLevel : int
    +lastUsed : datetime
    +updateFromSkillFeedback()
}

TechSpecialization "1" -- "0..*" VolunteerSkills : "verifies >"

User <|-d- Volunteer
User <|-d- Organiser


Volunteer "1" -u-> "0..1" SMB : "registers >"
Volunteer -- SkillMatchingEngine : "Matches skills"
Opportunity ----- SkillMatchingEngine : "Matches skills"
VolunteerSkills -r- SkillMatchingEngine : "Matches skills"
Volunteer "1" -- "0..1" OpportunityWatchlist : "has >"


Organiser "1" -- "1" OrganiserInfo : "has >"


Volunteer "1" -- "0..*" VolunteerSkills : "possesses >"
VolunteerSkills "0..*" -- "1" Skill : "references >"


Opportunity "0..*" -- "1" Organiser : "< creates"
Opportunity "0..*" -- "1..*" Skill : "requires >"


OpportunityWatchlist "1" -- "0..*" OpportunityWatchlistEntry : "contains >"
OpportunityWatchlistEntry "0..*" -- "1" Opportunity : "references >"

SMBAssociation "0..*" -- "1" SMB : "owned by >"
SMBAssociation "1" -l- "0..*" Volunteer : "includes >"

Volunteer "1" -- "0..*" TechSpecialization : "has >"


Volunteer "1" --- "0..*" OpportunityRegistry : "connects to >"
OpportunityRegistry "0..*" -- "1" Opportunity : "connects to >"
@enduml